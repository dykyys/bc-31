/*
 * forEach() —è–∫ –∑–∞–º—ñ–Ω–∞ —Ü–∏–∫–ª—ñ–≤ for —ñ for...of –¥–ª—è –º–∞—Å–∏–≤—ñ–≤
 */

// const numbers = [1, 2, 3, 4, 5];

// for (let i = 0; i < numbers.length; i++) {
//   console.log(`${i + 1} - ${numbers[i]}`);
// }

// for (const number of numbers) {
//   console.log(number);
// }

// numbers.forEach((element, index, array) => {
//   console.log('element', element);
//   //   console.log('index', index);
//   console.log('array', array);
// });

// function ownForEach(array, callback) {
//   for (let i = 0; i < array.length; i++) {
//     callback(array[i], i, array);
//     // console.log(i);
//     // console.log(array);
//   }
// }

// ownForEach(numbers, element => {
//   console.log('element', element);
//   //   console.log('index', index);
//   //   console.log('array', array);
// });

/*
? –í–∏–∫–æ–Ω–∞–π—Ç–µ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ –∫–æ–¥—É, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ –º–µ—Ç–æ–¥ forEach —ñ —Å—Ç—Ä—ñ–ª–æ—á–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó.
*/

// function logItems(items) {
//   //   for (let i = 0; i < items.length; i += 1) {
//   //     console.log(`${i + 1} - ${items[i]}`);
//   //   }

//   items.forEach((element, index) => {
//     console.log(`${index + 1} - ${element}`);
//   });
// }

// logItems(['Mango', 'Poly', 'Ajax']);
// logItems(['üçé', 'üçá', 'üçë', 'üçå', 'üçã']);

// –ó—ñ–±—Ä–∞—Ç–∏ –æ–¥–Ω–∞–∫–æ–≤—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ –≤ –¥–≤–æ—Ö –º–∞—Å–∏–≤–∞—Ö –≤ –æ–¥–∏–Ω
// –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é forEach
// const numbers = [1, 2, 3, 4, 5];
// const numbers2 = [5, 6, 3];

// const newNumbers = [];

// numbers2.forEach(element => {
//   if (numbers.includes(element)) {
//     newNumbers.push(element);
//   }
// });
// console.log(newNumbers);
